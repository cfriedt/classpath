/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class gnu_java_nio_KqueueSelectorImpl */

#ifndef _Included_gnu_java_nio_KqueueSelectorImpl
#define _Included_gnu_java_nio_KqueueSelectorImpl
#ifdef __cplusplus
extern "C" {
#endif
#undef gnu_java_nio_KqueueSelectorImpl_MAX_DOUBLING_CAPACITY
#define gnu_java_nio_KqueueSelectorImpl_MAX_DOUBLING_CAPACITY 16384L
#undef gnu_java_nio_KqueueSelectorImpl_CAP_INCREMENT
#define gnu_java_nio_KqueueSelectorImpl_CAP_INCREMENT 1024L
#undef gnu_java_nio_KqueueSelectorImpl_OP_ACCEPT
#define gnu_java_nio_KqueueSelectorImpl_OP_ACCEPT 16L
#undef gnu_java_nio_KqueueSelectorImpl_OP_CONNECT
#define gnu_java_nio_KqueueSelectorImpl_OP_CONNECT 8L
#undef gnu_java_nio_KqueueSelectorImpl_OP_READ
#define gnu_java_nio_KqueueSelectorImpl_OP_READ 1L
#undef gnu_java_nio_KqueueSelectorImpl_OP_WRITE
#define gnu_java_nio_KqueueSelectorImpl_OP_WRITE 4L
/*
 * Class:     gnu_java_nio_KqueueSelectorImpl
 * Method:    kqueue_supported
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_gnu_java_nio_KqueueSelectorImpl_kqueue_1supported
  (JNIEnv *, jclass);

/*
 * Class:     gnu_java_nio_KqueueSelectorImpl
 * Method:    sizeof_struct_kevent
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_gnu_java_nio_KqueueSelectorImpl_sizeof_1struct_1kevent
  (JNIEnv *, jclass);

/*
 * Class:     gnu_java_nio_KqueueSelectorImpl
 * Method:    implOpen
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_gnu_java_nio_KqueueSelectorImpl_implOpen
  (JNIEnv *, jclass);

/*
 * Class:     gnu_java_nio_KqueueSelectorImpl
 * Method:    implClose
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_gnu_java_nio_KqueueSelectorImpl_implClose
  (JNIEnv *, jclass, jint);

/*
 * Class:     gnu_java_nio_KqueueSelectorImpl
 * Method:    kevent_set
 * Signature: (Ljava/nio/ByteBuffer;IIIII)V
 */
JNIEXPORT void JNICALL Java_gnu_java_nio_KqueueSelectorImpl_kevent_1set
  (JNIEnv *, jclass, jobject, jint, jint, jint, jint, jint);

/*
 * Class:     gnu_java_nio_KqueueSelectorImpl
 * Method:    kevent
 * Signature: (ILjava/nio/ByteBuffer;IIJ)I
 */
JNIEXPORT jint JNICALL Java_gnu_java_nio_KqueueSelectorImpl_kevent
  (JNIEnv *, jclass, jint, jobject, jint, jint, jlong);

/*
 * Class:     gnu_java_nio_KqueueSelectorImpl
 * Method:    fetch_key
 * Signature: (Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_gnu_java_nio_KqueueSelectorImpl_fetch_1key
  (JNIEnv *, jclass, jobject);

/*
 * Class:     gnu_java_nio_KqueueSelectorImpl
 * Method:    ready_ops
 * Signature: (Ljava/nio/ByteBuffer;I)I
 */
JNIEXPORT jint JNICALL Java_gnu_java_nio_KqueueSelectorImpl_ready_1ops
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     gnu_java_nio_KqueueSelectorImpl
 * Method:    check_eof
 * Signature: (Ljava/nio/ByteBuffer;)Z
 */
JNIEXPORT jboolean JNICALL Java_gnu_java_nio_KqueueSelectorImpl_check_1eof
  (JNIEnv *, jclass, jobject);

#ifdef __cplusplus
}
#endif
#endif
